{"version":3,"file":"static/js/544.33e64528.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","pages/MovieDetail/MovieDetail.styled.js","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 42px;\n`;\n\nexport const Item = styled.li`\n  border: 1px solid #2a8d9c;\n  border-radius: 4px;\n  :hover {\n  box-shadow: 4px 6px 12px #2a8d9c;\n`;\n\nexport const NavItem = styled(NavLink)`\n  color: #000000;\n  border-radius: 5px;\n  padding: 6px 12px;\n  display: inline-block;\n\n  :hover,\n  :focus {\n    color: #2a8d9c;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, NavItem, FilmName } from './MovieList.styled';\n\nexport const MovieList = ({ movies, link }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ poster_path, name, title, id }) => {\n        return (\n          <Item key={id}>\n            <NavItem to={`${link}${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                width={300}\n              />\n              <FilmName>{name || title}</FilmName>\n            </NavItem>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  link: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/API';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Box } from 'pages/MovieDetail/MovieDetail.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const movies = await getTrendingMovies();\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <Box>\n      {/* <Title>Trending today</Title> */}\n      {isLoading ? <Loader /> : <MovieList movies={movies} link={'movies/'} />}\n    </Box>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Box = styled.main`\n  padding: 48px 16px;\n  max-width: 1240px;\n  margin: 0 auto;\n`;\n\nexport const ButtonGoBack = styled(Link)`\n  display: inline-block;\n  padding: 6px 16px;\n  border: none;\n  border-radius: 5px;\n  background-color: #2a8d9c;\n  color: #000000;\n  cursor: pointer;\n  outline: none;\n  text-transform: uppercase;\n  margin-bottom: 16px;\n\n  :hover,\n  :focus {\n    background-color: #2a8d9c;\n    color: #ffffff;\n  }\n`;\n\nexport const MovieBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 30px;\n  margin-bottom: 32px;\n  @media (min-width: 480px) {\n    grid-template-columns: 200px 1fr;\n  }\n  @media (min-width: 768px) {\n    grid-template-columns: 300px 1fr;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const Rating = styled.p`\n  display: inline-block;\n  margin-bottom: 16px;\n  background-color: #2a8d9c;\n  color: #ffffff;\n  padding: 2px 6px;\n  border-radius: 5px;\n`;\n\nexport const Overview = styled.h2`\n  margin-bottom: 16px;\n`;\n\nexport const OverviewInfo = styled.p`\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 16px;\n`;\n\nexport const LinkItem = styled(Link)`\n  color: #000000;\n  display: inline-block;\n  margin-bottom: 16px;\n\n  :hover,\n  :focus {\n    color: #2a8d9c;\n  }\n`;\n\nexport const Error = styled.p`\n  padding: 32px 16px;\n  font-size: 32px;\n  text-align: center;\n  color: #2a8d9c;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'd491df0c44215a259069c1373aa9064e',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","Item","NavItem","NavLink","FilmName","MovieList","movies","link","location","useLocation","map","poster_path","name","title","id","to","state","from","src","alt","width","Home","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","getTrendingMovies","results","console","log","Box","ButtonGoBack","Link","MovieBox","Img","MovieTitle","Rating","Overview","OverviewInfo","Title","LinkItem","Error","axios","api_key","params","page","data","getMovieBySearch","query","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}