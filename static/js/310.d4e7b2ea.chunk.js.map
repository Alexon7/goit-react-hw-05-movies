{"version":3,"file":"static/js/310.d4e7b2ea.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 42px;\n`;\n\nexport const Item = styled.li`\n  border: 1px solid #2a8d9c;\n  border-radius: 4px;\n  :hover {\n  box-shadow: 4px 6px 12px #2a8d9c;\n`;\n\nexport const NavItem = styled(NavLink)`\n  color: #000000;\n  border-radius: 5px;\n  padding: 6px 12px;\n  display: inline-block;\n\n  :hover,\n  :focus {\n    color: #2a8d9c;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, NavItem, FilmName } from './MovieList.styled';\n\nexport const MovieList = ({ movies, link }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ poster_path, name, title, id }) => {\n        return (\n          <Item key={id}>\n            <NavItem to={`${link}${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                width={300}\n              />\n              <FilmName>{name || title}</FilmName>\n            </NavItem>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  link: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  padding: 48px 16px;\n  max-width: 1240px;\n  margin: 0 auto;\n`;\n\nexport const BoxForm = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  margin-bottom: 48px;\n  color: #ffffff;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #2a8d9c;\n  background-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Search_Icon.svg/1024px-Search_Icon.svg.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearch } from 'services/API';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, BoxForm, Form, Button, Input } from './Movies.styled';\n\nexport default function Movies() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        setSearchQuery(movieName);\n        const data = await getMovieBySearch(movieName);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieName]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n    event.target.reset();\n  };\n\n  return (\n    <Main>\n      <BoxForm>\n        <Form onSubmit={handleSubmit}>\n          <Button type=\"submit\"></Button>\n          <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"movieName\"\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n        </Form>\n      </BoxForm>\n      {isLoading ? <Loader /> : <MovieList movies={movies} link={''} />}\n    </Main>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'd491df0c44215a259069c1373aa9064e',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","Item","NavItem","NavLink","FilmName","MovieList","movies","link","location","useLocation","map","poster_path","name","title","id","to","state","from","src","alt","width","Main","BoxForm","Form","Button","Input","Movies","useState","isLoading","setIsLoading","setMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovies","getMovieBySearch","data","results","console","log","onSubmit","event","preventDefault","query","target","reset","type","autoComplete","autoFocus","placeholder","onChange","e","value","Loader","axios","api_key","getTrendingMovies","params","page","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}